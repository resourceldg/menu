import{S as e,i as a,s as n,e as t,l as s,h as i,c as d,a as l,m,k as o,d as r,b as u,f,o as c,g as p,p as v,q as g,r as h}from"./client.7628e46f.js";import{C as $}from"./Code.4523955d.js";import"./index.9c86a623.js";import{D as w}from"./index.08641c7b.js";import"./index.e7330692.js";function b(e){let a,n,b,D,E;return n=new w({props:{data:e[0],loading:e[1],columns:[{label:"ID",field:"id",class:"md:w-10"},{label:"Ep.",value:y,class:"md:w-10",editable:!1},{field:"name",class:"md:w-10"},{field:"summary",textarea:!0,value:x,add:"text-sm text-gray-700 caption md:w-full sm:w-64",remove:"text-right",headerRemove:"justify-end",iconAfter:!0},{field:"thumbnail",value:j,class:"w-48",sortable:!1,editable:!1,headerRemove:"justify-end"}]}}),n.$on("update",e[2]),D=new $({props:{code:'<script>\n  import { DataTable } from "smelte";\n\n  let data = [];\n  let loading = true;\n\n  async function getData() {\n    if (typeof window === "undefined") return;\n\n    loading = true;\n    const res = await fetch("data.json");\n    const body = await res.json();\n\n    data = body._embedded.episodes;\n\n    setTimeout(() => loading = false, 500);\n  }\n\n  getData();\n<\/script>\n\n<div class="overflow-auto p-1">\n  <DataTable\n    {data}\n    {loading}\n    on:update={({ detail }) => {\n      const { column, item, value } = detail;\n\n      const index = data.findIndex(i => i.id === item.id);\n\n      data[index][column.field] = value;\n    }}\n    columns={[\n      { label: "ID", field: "id", class: "md:w-10", },\n      {\n        label: "Ep.",\n        value: (v) => `S${v.season}E${v.number}`,\n        class: "md:w-10",\n        editable: false,\n      },\n      { field: "name", class: "md:w-10" },\n      {\n        field: "summary",\n        textarea: true,\n        value: v => v && v.summary ? v.summary : "",\n        add: "text-sm text-gray-700 caption md:w-full sm:w-64",\n        remove: "text-right",\n        headerRemove: "justify-end",\n        iconAfter: true,\n      },\n      {\n        field: "thumbnail",\n        value: (v) => v && v.image\n          ? `<img src="${v.image.medium.replace("http", "https")}" height="70" alt="${v.name}">`\n          : "",\n        class: "w-48",\n        sortable: false,\n        editable: false,\n        headerRemove: "justify-end",\n      }\n    ]}\n  />\n</div>'}}),{c(){a=t("div"),s(n.$$.fragment),b=i(),s(D.$$.fragment),this.h()},l(e){a=d(e,"DIV",{class:!0});var t=l(a);m(n.$$.fragment,t),b=o(t),m(D.$$.fragment,t),t.forEach(r),this.h()},h(){u(a,"class","overflow-auto p-1")},m(e,t){f(e,a,t),c(n,a,null),p(a,b),c(D,a,null),E=!0},p(e,[a]){const t={};1&a&&(t.data=e[0]),2&a&&(t.loading=e[1]),n.$set(t)},i(e){E||(v(n.$$.fragment,e),v(D.$$.fragment,e),E=!0)},o(e){g(n.$$.fragment,e),g(D.$$.fragment,e),E=!1},d(e){e&&r(a),h(n),h(D)}}}const y=e=>`S${e.season}E${e.number}`,x=e=>e&&e.summary?e.summary:"",j=e=>e&&e.image?`<img src="${e.image.medium.replace("http","https")}" height="70" alt="${e.name}">`:"";function D(e,a,n){let t=[],s=!0;!async function(){if("undefined"==typeof window)return;n(1,s=!0);const e=await fetch("data.json"),a=await e.json();n(0,t=a._embedded.episodes),setTimeout((()=>n(1,s=!1)),500)}();return[t,s,({detail:e})=>{const{column:a,item:s,value:i}=e,d=t.findIndex((e=>e.id===s.id));n(0,t[d][a.field]=i,t)}]}export default class extends e{constructor(e){super(),a(this,e,D,b,n,{})}}
