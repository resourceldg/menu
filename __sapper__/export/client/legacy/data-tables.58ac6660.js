import{_ as n,a as e,b as a,i as t,c as s,S as i,s as r,e as o,q as d,m as l,d as u,f as m,r as c,p as f,g as v,h as p,j as g,u as h,k as b,l as w,v as $,w as x,x as y,ar as j}from"./client.01ca4560.js";import{C as D}from"./Code.538820bc.js";import"./index.5f5d7018.js";import{D as R}from"./index.6c071eb2.js";import"./index.2d192613.js";function E(n){var e,a,t,s,i;return(a=new R({props:{data:n[0],loading:n[1],columns:[{label:"ID",field:"id",class:"md:w-10"},{label:"Ep.",value:I,class:"md:w-10",editable:!1},{field:"name",class:"md:w-10"},{field:"summary",textarea:!0,value:T,add:"text-sm text-gray-700 caption md:w-full sm:w-64",remove:"text-right",headerRemove:"justify-end",iconAfter:!0},{field:"thumbnail",value:k,class:"w-48",sortable:!1,editable:!1,headerRemove:"justify-end"}]}})).$on("update",n[2]),s=new D({props:{code:'<script>\n  import { DataTable } from "smelte";\n\n  let data = [];\n  let loading = true;\n\n  async function getData() {\n    if (typeof window === "undefined") return;\n\n    loading = true;\n    const res = await fetch("data.json");\n    const body = await res.json();\n\n    data = body._embedded.episodes;\n\n    setTimeout(() => loading = false, 500);\n  }\n\n  getData();\n<\/script>\n\n<div class="overflow-auto p-1">\n  <DataTable\n    {data}\n    {loading}\n    on:update={({ detail }) => {\n      const { column, item, value } = detail;\n\n      const index = data.findIndex(i => i.id === item.id);\n\n      data[index][column.field] = value;\n    }}\n    columns={[\n      { label: "ID", field: "id", class: "md:w-10", },\n      {\n        label: "Ep.",\n        value: (v) => `S${v.season}E${v.number}`,\n        class: "md:w-10",\n        editable: false,\n      },\n      { field: "name", class: "md:w-10" },\n      {\n        field: "summary",\n        textarea: true,\n        value: v => v && v.summary ? v.summary : "",\n        add: "text-sm text-gray-700 caption md:w-full sm:w-64",\n        remove: "text-right",\n        headerRemove: "justify-end",\n        iconAfter: true,\n      },\n      {\n        field: "thumbnail",\n        value: (v) => v && v.image\n          ? `<img src="${v.image.medium.replace("http", "https")}" height="70" alt="${v.name}">`\n          : "",\n        class: "w-48",\n        sortable: false,\n        editable: false,\n        headerRemove: "justify-end",\n      }\n    ]}\n  />\n</div>'}}),{c:function(){e=o("div"),d(a.$$.fragment),t=l(),d(s.$$.fragment),this.h()},l:function(n){e=u(n,"DIV",{class:!0});var i=m(e);c(a.$$.fragment,i),t=f(i),c(s.$$.fragment,i),i.forEach(v),this.h()},h:function(){p(e,"class","overflow-auto p-1")},m:function(n,r){g(n,e,r),h(a,e,null),b(e,t),h(s,e,null),i=!0},p:function(n,e){var t=w(e,1)[0],s={};1&t&&(s.data=n[0]),2&t&&(s.loading=n[1]),a.$set(s)},i:function(n){i||($(a.$$.fragment,n),$(s.$$.fragment,n),i=!0)},o:function(n){x(a.$$.fragment,n),x(s.$$.fragment,n),i=!1},d:function(n){n&&v(e),y(a),y(s)}}}var I=function(n){return"S".concat(n.season,"E").concat(n.number)},T=function(n){return n&&n.summary?n.summary:""},k=function(n){return n&&n.image?'<img src="'.concat(n.image.medium.replace("http","https"),'" height="70" alt="').concat(n.name,'">'):""};function S(n,e,a){var t=[],s=!0;function i(){return(i=j(regeneratorRuntime.mark((function n(){var e,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if("undefined"!=typeof window){n.next=2;break}return n.abrupt("return");case 2:return a(1,s=!0),n.next=5,fetch("data.json");case 5:return e=n.sent,n.next=8,e.json();case 8:i=n.sent,a(0,t=i._embedded.episodes),setTimeout((function(){return a(1,s=!1)}),500);case 11:case"end":return n.stop()}}),n)})))).apply(this,arguments)}!function(){i.apply(this,arguments)}();return[t,s,function(n){var e=n.detail,s=e.column,i=e.item,r=e.value,o=t.findIndex((function(n){return n.id===i.id}));a(0,t[o][s.field]=r,t)}]}var _=function(o){n(l,i);var d=e(l);function l(n){var e;return a(this,l),e=d.call(this),t(s(e),n,S,E,r,{}),e}return l}();export default _;
