import{S as a,i as e,s,e as r,t,h as n,l as o,c as l,a as d,j as i,d as c,k as h,m as k,b as m,f,g,o as u,u as p,p as v,q as w,r as $,T as b,au as y}from"./client.7628e46f.js";import{C as E}from"./Code.4523955d.js";function S(a){let e,s,b,y,S,x,C,P,I,T,N,A,B,M,j,D,q,H,V,z,F,G,J,K,L,O,Q,R,U,W,X,Y,Z,_,aa,ea,sa,ra,ta=a[0]?"dark":"light";return T=new E({props:{code:"<button bind:value={$darkMode}>Toggle dark mode</button>"}}),H=new E({props:{code:'\nbackgroundColor: ["dark", "dark-hover", "hover"],\nborderColor: ["dark", "dark-focus"],\ntextColor: ["dark", "dark-hover", "dark-active"]\n'}}),X=new E({props:{code:'\n<div class="duration-200 ease-in p-10 my-10 bg-black dark:bg-white text-white dark:text-black">\n  I am a {$darkMode ? "dark" : "light"} div.\n</div>\n'}}),{c(){e=r("h4"),s=t("Dark mode"),b=n(),y=r("p"),S=t("Smelte uses css pseudo-class variant\n  "),x=r("a"),C=t("feature"),P=t("\n  of Tailwind to enable dark mode. Basic dark mode switch looks like this:"),I=n(),o(T.$$.fragment),N=n(),A=r("p"),B=t("This will append\n  "),M=r("span"),j=t("mode-dark"),D=t('\n  class to the document body which will enable all generated classes preceded by\n  pseudo-class "dark:". By default smelte generates following variants:'),q=n(),o(H.$$.fragment),V=n(),z=r("p"),F=t("Now you can use dark theme classes like\n  "),G=r("span"),J=t("dark:bg-white"),K=t("\n  (try using the theme toggle on the top right)."),L=n(),O=r("div"),Q=t("I am a "),R=t(ta),U=t(" div."),W=n(),o(X.$$.fragment),Y=n(),Z=r("p"),_=t("If you don't need dark mode at all, you can pass\n  "),aa=r("span"),ea=t("darkMode: false"),sa=t("\n  to the smelte-rollup-plugin and it will generate no extra CSS."),this.h()},l(a){e=l(a,"H4",{class:!0});var r=d(e);s=i(r,"Dark mode"),r.forEach(c),b=h(a),y=l(a,"P",{});var t=d(y);S=i(t,"Smelte uses css pseudo-class variant\n  "),x=l(t,"A",{class:!0,href:!0});var n=d(x);C=i(n,"feature"),n.forEach(c),P=i(t,"\n  of Tailwind to enable dark mode. Basic dark mode switch looks like this:"),t.forEach(c),I=h(a),k(T.$$.fragment,a),N=h(a),A=l(a,"P",{});var o=d(A);B=i(o,"This will append\n  "),M=l(o,"SPAN",{class:!0});var m=d(M);j=i(m,"mode-dark"),m.forEach(c),D=i(o,'\n  class to the document body which will enable all generated classes preceded by\n  pseudo-class "dark:". By default smelte generates following variants:'),o.forEach(c),q=h(a),k(H.$$.fragment,a),V=h(a),z=l(a,"P",{});var f=d(z);F=i(f,"Now you can use dark theme classes like\n  "),G=l(f,"SPAN",{class:!0});var g=d(G);J=i(g,"dark:bg-white"),g.forEach(c),K=i(f,"\n  (try using the theme toggle on the top right)."),f.forEach(c),L=h(a),O=l(a,"DIV",{class:!0});var u=d(O);Q=i(u,"I am a "),R=i(u,ta),U=i(u," div."),u.forEach(c),W=h(a),k(X.$$.fragment,a),Y=h(a),Z=l(a,"P",{});var p=d(Z);_=i(p,"If you don't need dark mode at all, you can pass\n  "),aa=l(p,"SPAN",{class:!0});var v=d(aa);ea=i(v,"darkMode: false"),v.forEach(c),sa=i(p,"\n  to the smelte-rollup-plugin and it will generate no extra CSS."),p.forEach(c),this.h()},h(){m(e,"class","pb-8"),m(x,"class","a"),m(x,"href","https://tailwindcss.com/docs/configuring-variants/"),m(M,"class","code-inline"),m(G,"class","code-inline"),m(O,"class","duration-200 ease-in p-10 my-10 bg-black dark:bg-white text-white\n  dark:text-black"),m(aa,"class","code-inline")},m(a,r){f(a,e,r),g(e,s),f(a,b,r),f(a,y,r),g(y,S),g(y,x),g(x,C),g(y,P),f(a,I,r),u(T,a,r),f(a,N,r),f(a,A,r),g(A,B),g(A,M),g(M,j),g(A,D),f(a,q,r),u(H,a,r),f(a,V,r),f(a,z,r),g(z,F),g(z,G),g(G,J),g(z,K),f(a,L,r),f(a,O,r),g(O,Q),g(O,R),g(O,U),f(a,W,r),u(X,a,r),f(a,Y,r),f(a,Z,r),g(Z,_),g(Z,aa),g(aa,ea),g(Z,sa),ra=!0},p(a,[e]){(!ra||1&e)&&ta!==(ta=a[0]?"dark":"light")&&p(R,ta)},i(a){ra||(v(T.$$.fragment,a),v(H.$$.fragment,a),v(X.$$.fragment,a),ra=!0)},o(a){w(T.$$.fragment,a),w(H.$$.fragment,a),w(X.$$.fragment,a),ra=!1},d(a){a&&c(e),a&&c(b),a&&c(y),a&&c(I),$(T,a),a&&c(N),a&&c(A),a&&c(q),$(H,a),a&&c(V),a&&c(z),a&&c(L),a&&c(O),a&&c(W),$(X,a),a&&c(Y),a&&c(Z)}}}function x(a,e,s){let r;return b(a,y,(a=>s(0,r=a))),[r]}export default class extends a{constructor(a){super(),e(this,a,x,S,s,{})}}
