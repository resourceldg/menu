import{S as n,i as e,s as t,e as a,t as r,h as s,l as o,c as i,a as h,j as m,d as p,k as l,m as c,b as f,f as u,g as d,o as w,n as g,p as b,q as k,r as $}from"./client.7628e46f.js";import{C as v}from"./Code.4523955d.js";function j(n){let e,t,j,y,z,E,S,P,x,C,B,F,q,A,D,H,I,N;return B=new v({props:{code:'\n    import breakpoints from "smelte/breakpoints";\n\n    const bp = breakpoints();\n    $: show = $bp !== "sm";\n\n    {#if show}\n      ...\n    {/if}\n  '}}),I=new v({props:{code:'\n  function defaultCalc(width) {\n    if (width > 1279) {\n      return "xl";\n    }\n    if (width > 1023) {\n      return "lg";\n    }\n    if (width > 767) {\n      return "md";\n    }\n    return "sm";\n  }'}}),{c(){e=a("div"),t=a("h4"),j=r("Breakpoints helper store"),y=s(),z=a("p"),E=r("Sometimes it's useful to know about your current window breakpoint size to\n    order to make any adjustments when browser window gets resized. Smelte comes\n    with a helper store just for that."),S=s(),P=a("p"),x=r("For instance, navigation drawer on this page should hide programmatically\n    after hitting small window size breakpoint."),C=s(),o(B.$$.fragment),F=s(),q=a("p"),A=a("span"),D=r("breakpoints"),H=r("\n    accepts one function argument which returns breakpoint name.\n    "),o(I.$$.fragment),this.h()},l(n){e=i(n,"DIV",{});var a=h(e);t=i(a,"H4",{class:!0});var r=h(t);j=m(r,"Breakpoints helper store"),r.forEach(p),y=l(a),z=i(a,"P",{});var s=h(z);E=m(s,"Sometimes it's useful to know about your current window breakpoint size to\n    order to make any adjustments when browser window gets resized. Smelte comes\n    with a helper store just for that."),s.forEach(p),S=l(a),P=i(a,"P",{});var o=h(P);x=m(o,"For instance, navigation drawer on this page should hide programmatically\n    after hitting small window size breakpoint."),o.forEach(p),C=l(a),c(B.$$.fragment,a),F=l(a),q=i(a,"P",{});var f=h(q);A=i(f,"SPAN",{class:!0});var u=h(A);D=m(u,"breakpoints"),u.forEach(p),H=m(f,"\n    accepts one function argument which returns breakpoint name.\n    "),c(I.$$.fragment,f),f.forEach(p),a.forEach(p),this.h()},h(){f(t,"class","pb-8"),f(A,"class","code-inline")},m(n,a){u(n,e,a),d(e,t),d(t,j),d(e,y),d(e,z),d(z,E),d(e,S),d(e,P),d(P,x),d(e,C),w(B,e,null),d(e,F),d(e,q),d(q,A),d(A,D),d(q,H),w(I,q,null),N=!0},p:g,i(n){N||(b(B.$$.fragment,n),b(I.$$.fragment,n),N=!0)},o(n){k(B.$$.fragment,n),k(I.$$.fragment,n),N=!1},d(n){n&&p(e),$(B),$(I)}}}export default class extends n{constructor(n){super(),e(this,n,null,j,t,{})}}
